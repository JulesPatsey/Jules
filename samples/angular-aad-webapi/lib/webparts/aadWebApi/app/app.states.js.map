{"version":3,"sources":["webparts/aadWebApi/app/app.states.ts"],"names":[],"mappings":";AAAA,iCAAmC;AAEnC,OAAO;KACJ,MAAM,CAAC,oBAAoB,CAAC;KAC5B,MAAM,CAAC,oBAAoB,CAAC,CAAC;AAEhC,oBAAoB,CAAC,OAAO,GAAG,CAAC,gBAAgB,EAAE,oBAAoB,EAAE,mBAAmB,EAAE,mBAAmB,CAAC,CAAC;AAElH,8BAA8B,cAAyC,EACrE,kBAAiD;IAC/C,cAAc,CAAC,KAAK,CAAC,oBAAoB,EAAE;QACzC,QAAQ,EAAE,OAAO,CAAC,qDAAqD,CAAC,CAAC,QAAQ,EAAE;QACnF,UAAU,EAAE,8BAA8B;QAC1C,YAAY,EAAE,IAAI;KACnB,CAAC,CAAC;IAEL,kBAAkB,CAAC,SAAS,CAAE,UAAS,SAAS,EAAE,SAAS;QACvD,IAAI,MAAM,GAA6B,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC/D,MAAM,CAAC,EAAE,CAAC,oBAAoB,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;AACP,CAAC","file":"webparts/aadWebApi/app/app.states.js","sourcesContent":["import * as angular from 'angular';\r\n\r\nangular\r\n  .module('elevatedprivileges')\r\n  .config(uiRouterConfigurator);\r\n\r\nuiRouterConfigurator.$inject = ['$stateProvider', '$urlRouterProvider', '$locationProvider', '$injectorProvider'];\r\n\r\nfunction uiRouterConfigurator($stateProvider: angular.ui.IStateProvider,\r\n  $urlRouterProvider: angular.ui.IUrlRouterProvider): void {\r\n    $stateProvider.state('elevatedprivileges', {\r\n      template: require('./elevatedprivileges/elevatedprivileges.signin.html').toString(),\r\n      controller: 'elevatedPrivilegesController',\r\n      controllerAs: 'vm'\r\n    });\r\n\r\n  $urlRouterProvider.otherwise( function($injector, $location) {\r\n      let $state: angular.ui.IStateService = $injector.get('$state');\r\n      $state.go('elevatedprivileges');\r\n    });\r\n}"],"sourceRoot":"..\\..\\..\\..\\src"}