"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var sp_telemetry_1 = require('@ms/sp-telemetry');
var CKTextEditor_1 = require('../../ckeditor/CKTextEditor');
var CKEditorForWebPartRte = (function (_super) {
    __extends(CKEditorForWebPartRte, _super);
    function CKEditorForWebPartRte(config, currentHTML, editorElement, selectionChangeCallback, textChangeCallback, startUpFocus, onReadyCallback) {
        _super.call(this, config, currentHTML, editorElement, selectionChangeCallback, textChangeCallback, startUpFocus, onReadyCallback);
        this._ckEditorConfig = {
            allowedContent: true,
            disableNativeSpellChecker: false,
            on: {
                change: this._handleTextChange,
                selectionChange: this._handleSelectionChangeConvert
            },
            removePlugins: 'toolbar,contextmenu,menubutton,scayt,liststyle,tabletools,magicline,link ,resize,autogrow,elementspath',
            extraPlugins: 'justify',
            removeButtons: '',
            stylesSet: false,
            toolbar: [],
            startupFocus: this._startupFocus,
            fullPage: false,
            resize_enabled: false,
            width: '100%',
            height: 200
        };
        this._initialize(currentHTML);
    }
    CKEditorForWebPartRte.createNewEditor = function (config, currentHTML, editorElement, selectionChangeCallback, textChangeCallback, startupFocus) {
        return new Promise(function (resolve) {
            CKEditorForWebPartRte.moduleLoader.loadModule(config.editorSource).then(function () {
                var editor = new CKEditorForWebPartRte(config, currentHTML, editorElement, selectionChangeCallback, textChangeCallback, startupFocus, function () { resolve(editor); });
            }).catch(function (error) {
                sp_telemetry_1._TraceLogger.logError(CKEditorForWebPartRte.logSource, error);
            });
        });
    };
    CKEditorForWebPartRte.prototype._initialize = function (currentHTML) {
        if (!this._ckEditorConfig) {
            return;
        }
        var textPart = document.createElement('textarea');
        this._editorElement.appendChild(textPart);
        this._editor = CKEDITOR.replace(textPart, this._ckEditorConfig);
        this._editor.setData(currentHTML);
        this._addCustomToolbarCommands();
    };
    CKEditorForWebPartRte.logSource = sp_telemetry_1._LogSource.create('CKEditorForWebPartRte');
    return CKEditorForWebPartRte;
}(CKTextEditor_1.default));
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = CKEditorForWebPartRte;
