"use strict";
var sp_core_library_1 = require('@microsoft/sp-core-library');
var PageContext_1 = require('../PageContext');
var SharePointPageContextDataProvider_1 = require('./SharePointPageContextDataProvider');
var PageManager = (function () {
    function PageManager(serviceScope) {
        var _this = this;
        serviceScope.whenFinished(function () {
            _this._pageContext = serviceScope.consume(PageContext_1.default.serviceKey);
            _this._pageContextDataProvider = new SharePointPageContextDataProvider_1.default(serviceScope);
        });
    }
    Object.defineProperty(PageManager.prototype, "pageContext", {
        get: function () {
            return this._pageContext;
        },
        enumerable: true,
        configurable: true
    });
    PageManager.prototype.navigateToPage = function (serverRelativePageUrl, options, 
        legacyPageContext) {
        var _this = this;
        return new Promise(function (complete, reject) {
            if (options) {
                _this._pageContext.initialize(options, legacyPageContext);
                complete(undefined);
            }
            else {
                _this._pageContextDataProvider
                    .fetchComponentContextInfo(serverRelativePageUrl)
                    .then(function (legacyPageContextData) {
                    _this._pageContext.initialize(SharePointPageContextDataProvider_1.default._createPageContextData(legacyPageContextData), legacyPageContextData);
                    sp_core_library_1.Session._changePage();
                    complete(undefined);
                }).catch(function (error) {
                    reject(error);
                });
            }
        });
    };
    PageManager.serviceKey = sp_core_library_1.ServiceKey.create('sp-page-context:PageManager', PageManager);
    return PageManager;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = PageManager;
