"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var React = require('react');
var sp_core_library_1 = require('@microsoft/sp-core-library');
var office_ui_fabric_react_1 = require('office-ui-fabric-react');
var WorkbenchCommandBar_1 = require('../workbenchCommandBar/WorkbenchCommandBar');
var CanvasHost_1 = require('../canvasHost/CanvasHost');
var MobilePreview_1 = require('../mobilePreview/mobilePreview/MobilePreview');
var Workbench_resx_1 = require('./Workbench.resx');
var Workbench_module_scss_1 = require('./Workbench.module.scss');
var WorkBench = (function (_super) {
    __extends(WorkBench, _super);
    function WorkBench() {
        _super.call(this);
        var urlParams = new sp_core_library_1.UrlQueryParameterCollection(window.location.href);
        this.state = {
            displayMobilePreview: false,
            mobilePreviewDeviceType: MobilePreview_1.DeviceType.Phone,
            isEditing: (urlParams.getValue('Mode') !== 'Read'),
            officeHeaderTitle: Workbench_resx_1.default.Office365Title,
            hasOfficeHeader: false,
            hasCommandBar: false
        };
        this._toggleEdit = this._toggleEdit.bind(this);
        this._onClickMobileView = this._onClickMobileView.bind(this);
        this._onClickTabletView = this._onClickTabletView.bind(this);
        this._closeMobilePreview = this._closeMobilePreview.bind(this);
        this._setSuiteNavZIndex = this._setSuiteNavZIndex.bind(this);
    }
    WorkBench.prototype.render = function () {
        var mobilePreview = undefined;
        var pageStore = this.props.pageStore;
        if (this.state.displayMobilePreview) {
            mobilePreview = React.createElement(MobilePreview_1.default, {onExit: this._closeMobilePreview, deviceType: this.state.mobilePreviewDeviceType});
        }
        return (React.createElement("div", {className: Workbench_module_scss_1.default.workbench}, 
            React.createElement("div", {className: Workbench_module_scss_1.default.header}, 
                React.createElement("div", {className: Workbench_module_scss_1.default.headerMenu}, 
                    React.createElement(office_ui_fabric_react_1.Icon, {iconName: office_ui_fabric_react_1.IconName.Waffle})
                ), 
                React.createElement("div", {className: office_ui_fabric_react_1.css(Workbench_module_scss_1.default.headerTitle, 'ms-font-xl')}, 
                    React.createElement("em", null, this.state.officeHeaderTitle), 
                    Workbench_resx_1.default.SharePointWorkbenchTitle), 
                React.createElement("div", {className: Workbench_module_scss_1.default.headerPerson}, 
                    React.createElement(office_ui_fabric_react_1.Icon, {iconName: office_ui_fabric_react_1.IconName.Contact})
                )), 
            React.createElement("div", null, 
                React.createElement("div", {className: Workbench_module_scss_1.default.commandBar}, 
                    React.createElement(WorkbenchCommandBar_1.default, {isEditing: this.state.isEditing, onClickMobileView: this._onClickMobileView, onClickTabletView: this._onClickTabletView, toggleEdit: this._toggleEdit, clearPage: pageStore.clearPageState, savePage: pageStore.savePageState})
                ), 
                React.createElement("div", {className: Workbench_module_scss_1.default.pageContent}, 
                    React.createElement(CanvasHost_1.default, {store: pageStore, isEditing: this.state.isEditing, hasOfficeHeader: this.state.hasOfficeHeader, hasCommandBar: this.state.hasCommandBar})
                )), 
            mobilePreview));
    };
    WorkBench.prototype._toggleEdit = function () {
        this.setState({
            isEditing: !this.state.isEditing
        });
    };
    WorkBench.prototype._onClickMobileView = function () {
        this.setState({
            displayMobilePreview: true,
            mobilePreviewDeviceType: MobilePreview_1.DeviceType.Phone
        });
        this._setSuiteNavZIndex('0');
    };
    WorkBench.prototype._onClickTabletView = function () {
        this.setState({
            displayMobilePreview: true,
            mobilePreviewDeviceType: MobilePreview_1.DeviceType.Tablet
        });
        this._setSuiteNavZIndex('0');
    };
    WorkBench.prototype._closeMobilePreview = function () {
        this.setState({
            displayMobilePreview: false,
            mobilePreviewDeviceType: MobilePreview_1.DeviceType.Phone
        });
        this._setSuiteNavZIndex('5');
    };
    WorkBench.prototype._setSuiteNavZIndex = function (value) {
        var suiteNav = document.getElementById('SuiteNavPlaceHolder');
        if (suiteNav) {
            suiteNav.style.zIndex = value;
        }
    };
    return WorkBench;
}(React.Component));
exports.WorkBench = WorkBench;
