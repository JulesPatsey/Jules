{"version":3,"sources":["configureWebpack/loaders/LoaderBase.ts"],"names":[],"mappings":"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","file":"configureWebpack/loaders/LoaderBase.js","sourcesContent":["import { EOL } from 'os';\r\nimport { escapeRegExp } from 'lodash';\r\nimport * as path from 'path';\r\n\r\ninterface IContext {\r\n  emitWarning: (warning: string) => void;\r\n  request: string;\r\n}\r\n\r\nabstract class LoaderBase {\r\n  public getWebpackLoader(): (content: string) => string {\r\n    const self: LoaderBase = this;\r\n    return function(content: string): string {\r\n      const context: IContext = this as IContext;\r\n      const request: string = context.request;\r\n      return self._processRequest(request, context);\r\n    };\r\n  }\r\n\r\n  protected abstract get filename(): string;\r\n  protected abstract get packageFriendlyName(): string;\r\n  protected abstract get packageName(): string;\r\n  protected abstract getIdentifiers(path: string): { [identifier: string]: string } | string;\r\n\r\n  protected get shouldExportBasePackage(): boolean {\r\n    return false;\r\n  }\r\n\r\n  protected get externalPackageName(): string {\r\n    return this.packageName;\r\n  }\r\n\r\n  private _processRequest(request: string, context: IContext): string {\r\n    const requestSections: string[] = request.split('!');\r\n    const packagePath: string = requestSections[requestSections.length - 1];\r\n    const posixPackagePath: string = packagePath.replace(/\\\\/g, '/');\r\n\r\n    const simplifiedPathsRegExp: RegExp = new RegExp(`(?:\\/${escapeRegExp(this.packageName)}\\/lib\\/)(.+)`);\r\n    const simplifiedPaths: string[] = posixPackagePath.match(simplifiedPathsRegExp);\r\n\r\n    const lines: string[] = [];\r\n\r\n    if (simplifiedPaths) {\r\n      const identifiersPath: string = simplifiedPaths[1].trim().match(/(?:\\/*)(.+)(?:\\.js)$/)[1];\r\n      const identifiers: { [identifier: string]: string } | string = this.getIdentifiers(identifiersPath);\r\n\r\n      lines.push(`// Loading ${this.packageName}/${simplifiedPaths[1]}`);\r\n\r\n      if (identifiers) {\r\n        lines.push(...[\r\n          `var package = require('${this.externalPackageName}');`\r\n        ]);\r\n\r\n        if (typeof(identifiers) === 'string') {\r\n          lines.push(...[\r\n            `module.exports = package.${identifiers};`\r\n          ]);\r\n        } else {\r\n          lines.push(...[\r\n            `module.exports = ${this.shouldExportBasePackage ? 'package' : '{}'};`\r\n          ], ...Object.keys(identifiers).map((identifier: string): string =>\r\n            `module.exports.${identifier} = package.${identifiers[identifier]};`\r\n          ));\r\n        }\r\n      } else {\r\n        // We didn't match a well-defined export, so we should emit a warning and pass through\r\n        context.emitWarning(`${this.packageFriendlyName} path\"${simplifiedPaths[0]}\" does not correspond to a ` +\r\n                            `well-defined export. Large portions of ${this.packageName} may be unintentionally ` +\r\n                            'bundled.');\r\n\r\n        lines.push(...this._getPassthroughLines(requestSections));\r\n      }\r\n    } else {\r\n      // If we're here, this isn't a reference to the package we care about, so we should pass through\r\n      lines.push(...this._getPassthroughLines(requestSections));\r\n    }\r\n\r\n    return lines.join(EOL);\r\n  }\r\n\r\n  private _getPassthroughLines(requestSections: string[]): string[] {\r\n    const filename: string = path.basename(this.filename);\r\n    const filenameRegExp: RegExp = new RegExp(escapeRegExp(filename), 'i');\r\n\r\n    // Remove this loader from the loader chain to make sure we don't end up in an infinite loop\r\n    const passthroughRequestSections: string[] =\r\n      requestSections.filter((section: string) => !section.match(filenameRegExp));\r\n\r\n    // Use \"!!\" prefix to disable all configured loaders because they're already specified in the remaining request.\r\n    return [\r\n      `module.exports = require(${JSON.stringify(`!!${passthroughRequestSections.join('!')}`)});`\r\n    ];\r\n  }\r\n}\r\n\r\nexport default LoaderBase;\r\n"],"sourceRoot":"..\\..\\..\\src"}