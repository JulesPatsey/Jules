{"version":3,"sources":["webparts/weather/WeatherWebPart.ts"],"names":[],"mappings":";;;;;;AAAA,8DAAqD;AACrD,8DAKoC;AAGpC,6DAA2C;AAC3C,wCAA0C;AAG1C,0BAA4B;AAC5B,OAAO,CAAC,eAAe,CAAC,CAAC;AAEzB;IAA4C,kCAA2C;IAGrF;eACE,iBAAO;IAET,CAAC;IAEM,+BAAM,GAAb;QAEE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,KAAK,KAAK,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,kBAAe,6BAAM,CAAC,OAAO,cAAU,CAAC;QACtE,CAAC;QAED,IAAI,CAAC,cAAc,EAAE,CAAC;IAExB,CAAC;IAEO,uCAAc,GAAtB;QACE,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,MAAI,6BAAM,CAAC,OAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAE1D,IAAM,QAAQ,GAAW,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;QAElD,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAC;YACxD,MAAM,CAAC;QACT,CAAC;QAED,IAAM,OAAO,GAAmB,IAAI,CAAC;QAEpC,CAAS,CAAC,aAAa,CAAC;YACvB,QAAQ,EAAE,QAAQ;YAClB,KAAK,EAAE,EAAE;YACT,IAAI,EAAE,GAAG;YACT,OAAO,EAAE,UAAC,OAAY;gBACpB,IAAM,IAAI,GACR,wBAAqB,OAAO,CAAC,IAAI,gBAAU,OAAO,CAAC,IAAI,aAAQ,OAAO,CAAC,KAAK,CAAC,IAAI,kCACtE,OAAO,CAAC,IAAI,SAAI,OAAO,CAAC,MAAM,eAAY,CAAC;gBACxD,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;qBACzB,UAAU,CAAC,OAAO,CAAC;qBACnB,GAAG,CAAC,YAAY,EACf,yCAAuC,QAAQ,OAAI,CAAC,CAAC;YAC3D,CAAC;YACD,KAAK,EAAE,UAAC,KAAU;gBAChB,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,QAAM,KAAK,CAAC,OAAO,SAAM,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YACxE,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,sBAAc,uCAAW;aAAzB;YACE,MAAM,CAAC,yBAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC;;;OAAA;IAES,qDAA4B,GAAtC;QACE,MAAM,CAAC;YACL,KAAK,EAAE;gBACL;oBACE,MAAM,EAAE;wBACN,WAAW,EAAE,OAAO,CAAC,uBAAuB;qBAC7C;oBACD,MAAM,EAAE;wBACN;4BACE,SAAS,EAAE,OAAO,CAAC,aAAa;4BAChC,WAAW,EAAE;gCACX,uCAAqB,CAAC,UAAU,EAAE;oCAChC,KAAK,EAAE,OAAO,CAAC,kBAAkB;iCAClC,CAAC;6BACH;yBACF;qBACF;iBACF;aACF;SACF,CAAC;IACJ,CAAC;IACD,sBAAc,0DAA8B;aAA5C;YACE,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;;;OAAA;IACH,qBAAC;AAAD,CA7EA,AA6EC,CA7E2C,uCAAqB,GA6EhE","file":"webparts/weather/WeatherWebPart.js","sourcesContent":["import { Version } from '@microsoft/sp-core-library';\r\nimport {\r\n  BaseClientSideWebPart,\r\n  IPropertyPaneConfiguration,\r\n  PropertyPaneTextField,\r\n  IWebPartContext\r\n} from '@microsoft/sp-webpart-base';\r\nimport { escape } from '@microsoft/sp-lodash-subset';\r\n\r\nimport styles from './Weather.module.scss';\r\nimport * as strings from 'weatherStrings';\r\nimport { IWeatherWebPartProps } from './IWeatherWebPartProps';\r\nimport { SPComponentLoader } from '@microsoft/sp-loader';\r\nimport * as $ from 'jquery';\r\nrequire('simpleWeather');\r\n\r\nexport default class WeatherWebPart extends BaseClientSideWebPart<IWeatherWebPartProps> {\r\n\r\n  private container: $;\r\n  public constructor() {\r\n    super();    \r\n    \r\n  }\r\n\r\n  public render(): void {    \r\n      \r\n    if (this.renderedOnce === false) {\r\n      this.domElement.innerHTML = `<div class=\"${styles.weather}\"></div>`;\r\n    }\r\n    \r\n    this.renderContents();\r\n    \r\n  }\r\n\r\n  private renderContents(): void {\r\n    this.container = $(`.${styles.weather}`, this.domElement);\r\n\r\n    const location: string = this.properties.location;\r\n\r\n    if (!location || location.length === 0) {\r\n      this.container.html('<p>Please specify a location</p>');\r\n      return;\r\n    }\r\n\r\n    const webPart: WeatherWebPart = this;\r\n\r\n    ($ as any).simpleWeather({\r\n      location: location,\r\n      woeid: '',\r\n      unit: 'c',\r\n      success: (weather: any): void => {\r\n        const html: string =\r\n          `<h2><i class=\"icon${weather.code}\"></i> ${weather.temp}&deg;${weather.units.temp}</h2>\r\n           <ul><li>${weather.city} ${weather.region}</li></ul>`;\r\n        webPart.container.html(html)\r\n          .removeAttr('style')\r\n          .css('background',\r\n            `url('http://loremflickr.com/500/139/${location}')`);\r\n      },\r\n      error: (error: any): void => {\r\n        webPart.container.html(`<p>${error.message}</p>`).removeAttr('style');\r\n      }\r\n    });\r\n  }\r\n\r\n  protected get dataVersion(): Version {\r\n    return Version.parse('1.0');\r\n  }\r\n\r\n  protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {\r\n    return {\r\n      pages: [\r\n        {\r\n          header: {\r\n            description: strings.PropertyPaneDescription\r\n          },\r\n          groups: [\r\n            {\r\n              groupName: strings.DataGroupName,\r\n              groupFields: [\r\n                PropertyPaneTextField('location', {\r\n                  label: strings.LocationFieldLabel\r\n                })\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  protected get disableReactivePropertyChanges(): boolean {\r\n    return true;\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}