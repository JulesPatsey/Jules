{"version":3,"sources":["webparts/pnpJsCrudWithBatch/PnpJsCrudWithBatchWebPart.ts"],"names":[],"mappings":"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","file":"webparts/pnpJsCrudWithBatch/PnpJsCrudWithBatchWebPart.js","sourcesContent":["import { Version } from '@microsoft/sp-core-library';\r\nimport {\r\n  BaseClientSideWebPart,\r\n  IPropertyPaneConfiguration,\r\n  PropertyPaneTextField\r\n} from '@microsoft/sp-webpart-base';\r\n\r\nimport styles from './PnpJsCrudWithBatch.module.scss';\r\n\r\nimport * as strings from 'pnpJsCrudWithBatchStrings';\r\nimport { IListItem } from './IListItem';\r\n\r\nimport * as pnp from 'sp-pnp-js';\r\nimport { Item, ItemAddResult, ItemUpdateResult } from '../../../node_modules/sp-pnp-js/lib/sharepoint/items';\r\n\r\nimport { IPnpJsCrudWithBatchWebPartProps } from './IPnpJsCrudWithBatchWebPartProps';\r\n\r\nexport default class PnpJsCrudWithBatchWebPart extends BaseClientSideWebPart<IPnpJsCrudWithBatchWebPartProps> {\r\n\r\n  protected onInit(): Promise<void> {\r\n    return new Promise<void>((resolve: () => void, reject: (error?: any) => void): void => {\r\n      pnp.setup({\r\n        headers: {\r\n          'Accept': 'application/json;odata=nometadata'\r\n        }\r\n      });\r\n      resolve();\r\n    });\r\n  }\r\n\r\n  public render(): void {\r\n    this.domElement.innerHTML = `\r\n  <div class=\"${styles.spPnPJsCrud}\">\r\n    <div class=\"${styles.container}\">\r\n      <div class=\"ms-Grid-row ms-bgColor-themeDark ms-fontColor-white ${styles.row}\">\r\n        <div class=\"ms-Grid-col ms-u-lg10 ms-u-xl8 ms-u-xlPush2 ms-u-lgPush1\">\r\n          <span class=\"ms-font-xl ms-fontColor-white\">\r\n            Sample SharePoint CRUD operations using the SP PnP JS library\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div class=\"ms-Grid-row ms-bgColor-themeDark ms-fontColor-white ${styles.row}\">\r\n        <div class=\"ms-Grid-col ms-u-lg10 ms-u-xl8 ms-u-xlPush2 ms-u-lgPush1\">\r\n          <button class=\"${styles.button} create-Button\">\r\n            <span class=\"${styles.label}\">Create item</span>\r\n          </button>          \r\n        </div>\r\n      </div>\r\n      <div class=\"ms-Grid-row ms-bgColor-themeDark ms-fontColor-white ${styles.row}\">\r\n        <div class=\"ms-Grid-col ms-u-lg10 ms-u-xl8 ms-u-xlPush2 ms-u-lgPush1\">\r\n          <button class=\"${styles.button} readall-Button\">\r\n            <span class=\"${styles.label}\">Read all items</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"ms-Grid-row ms-bgColor-themeDark ms-fontColor-white ${styles.row}\">\r\n        <div class=\"ms-Grid-col ms-u-lg10 ms-u-xl8 ms-u-xlPush2 ms-u-lgPush1\">\r\n          <button class=\"${styles.button} update-Button\">\r\n            <span class=\"${styles.label}\">Update latest items</span>\r\n          </button>\r\n          <button class=\"${styles.button} delete-Button\">\r\n            <span class=\"${styles.label}\">Delete item</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"ms-Grid-row ms-bgColor-themeDark ms-fontColor-white ${styles.row}\">\r\n        <div class=\"ms-Grid-col ms-u-lg10 ms-u-xl8 ms-u-xlPush2 ms-u-lgPush1\">\r\n          <div class=\"status\"></div>\r\n          <ul class=\"items\"><ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n    `;\r\n\r\n    this.updateStatus(this.listNotConfigured() ? 'Please configure list in Web Part properties' : 'Ready');\r\n    this.setButtonsState();\r\n    this.setButtonsEventHandlers();\r\n  }\r\n\r\n  private setButtonsState(): void {\r\n    const buttons: NodeListOf<Element> = this.domElement.querySelectorAll(`button.${styles.button}`);\r\n    const listNotConfigured: boolean = this.listNotConfigured();\r\n\r\n    for (let i: number = 0; i < buttons.length; i++) {\r\n      const button: Element = buttons.item(i);\r\n      if (listNotConfigured) {\r\n        button.setAttribute('disabled', 'disabled');\r\n      }\r\n      else {\r\n        button.removeAttribute('disabled');\r\n      }\r\n    }\r\n  }\r\n\r\n  private setButtonsEventHandlers(): void {\r\n    const webPart: PnpJsCrudWithBatchWebPart = this;\r\n    this.domElement.querySelector('button.create-Button').addEventListener('click', () => { webPart.createItem(); });    \r\n    this.domElement.querySelector('button.readall-Button').addEventListener('click', () => { webPart.readItems(); });\r\n    this.domElement.querySelector('button.update-Button').addEventListener('click', () => { webPart.updateItem(); });\r\n    this.domElement.querySelector('button.delete-Button').addEventListener('click', () => { webPart.deleteItem(); });\r\n  }\r\n\r\n  protected get dataVersion(): Version {\r\n    return Version.parse('1.0');\r\n  }\r\n\r\n  protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {\r\n    return {\r\n      pages: [\r\n        {\r\n          header: {\r\n            description: strings.PropertyPaneDescription\r\n          },\r\n          groups: [\r\n            {\r\n              groupName: strings.DataGroupName,\r\n              groupFields: [\r\n                PropertyPaneTextField('listName', {\r\n                  label: strings.ListNameFieldLabel\r\n                })\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  private listNotConfigured(): boolean {\r\n    return this.properties.listName === undefined ||\r\n      this.properties.listName === null ||\r\n      this.properties.listName.length === 0;\r\n  }\r\n\r\n  private createItem(): void {\r\n    this.updateStatus('Creating item...');\r\n    \r\n    pnp.sp.web.lists.getByTitle(this.properties.listName).getListItemEntityTypeFullName().then(entityTypeFullName =>{\r\n      let batch = pnp.sp.web.createBatch();\r\n      let list = pnp.sp.web.lists.getByTitle(this.properties.listName);\r\n\r\n      //todo - associate with a slider/dropdown/textbox to set number of items\r\n      for(var i=0;i<5;i++){\r\n        list.items.inBatch(batch).add({Title: \"Batch add \" + i}, entityTypeFullName).then(d => console.log(d));      \r\n      }     \r\n\r\n      batch.execute().then(d => {\r\n        this.updateStatus(`Items successfully created via batch`);\r\n      }).catch(error => {\r\n        this.updateStatus(`Error occured while creating items: `+ error);\r\n      });\r\n\r\n    });\r\n\r\n  }\r\n\r\n  private getLatestItemId(): Promise<IListItem[]> {\r\n    //todo - associate with a slider/dropdown/textbox to set number of items\r\n    return new Promise<IListItem[]>((resolve: (items: IListItem[]) => void, reject: (error: any) => void): void => {\r\n      pnp.sp.web.lists.getByTitle(this.properties.listName)\r\n        .items.orderBy('Id', false).top(5).select('Id').get()\r\n        .then((items: { Id: number }[]): void => {\r\n          if (items.length === 0) {\r\n            resolve(null);\r\n          }\r\n          else {\r\n            resolve(items);\r\n          }\r\n        }, (error: any): void => {\r\n          reject(error);\r\n        });\r\n    });\r\n  }\r\n\r\n  private readItems(): void {\r\n    this.updateStatus('Loading all items...');\r\n\r\n    let batch = pnp.sp.web.createBatch();\r\n    \r\n    pnp.sp.web.lists.getByTitle(this.properties.listName).items.select('Title', 'Id').inBatch(batch).get()\r\n    .then((items: IListItem[]): void => {\r\n        this.updateStatus(`Successfully loaded ${items.length} items`, items);\r\n      }, (error: any): void => {\r\n        this.updateStatus('Loading all items failed with error: ' + error);\r\n      });\r\n\r\n    batch.execute().then(function() {  \r\n      console.log(\"All is done!\");\r\n    });    \r\n  }\r\n\r\n  private updateItem(): void {\r\n    this.updateStatus('Updating latest items...');\r\n    \r\n    this.getLatestItemId().then((items:IListItem[]):void=> {\r\n          console.log(items);\r\n          if(items==null){\r\n              //throw new Error('No items found in the list'); \r\n              this.updateStatus('No items found in the list '); \r\n          }\r\n          else{\r\n            let batch = pnp.sp.web.createBatch();\r\n            let list = pnp.sp.web.lists.getByTitle(this.properties.listName);\r\n            items.forEach(element => {\r\n              list.items.getById(element.Id).inBatch(batch).update({Title: \"Updated from batch\"}).then(d => console.log(d));\r\n            });\r\n\r\n            batch.execute().then(d=> {\r\n                var stringOfId='';\r\n                items.forEach(element => {\r\n                    stringOfId+=element.Id +',';\r\n                });\r\n                this.updateStatus(`Item with IDs: ${stringOfId} successfully updated`);\r\n              }).catch(error => {\r\n                this.updateStatus('Loading latest items failed with error '+ error);\r\n            });\r\n          }\r\n        });\r\n  }\r\n\r\n  private deleteItem(): void {\r\n    if (!window.confirm('Are you sure you want to delete the latest item?')) {\r\n      return;\r\n    }\r\n\r\n    this.updateStatus('Loading latest items...');\r\n    let latestItemId: number = undefined;\r\n    let etag: string = undefined;\r\n\r\n    this.getLatestItemId().then((items:IListItem[]):void=> {\r\n        console.log(items);\r\n        if(items==null){\r\n            //throw new Error('No items found in the list');  \r\n            this.updateStatus('No items found in the list ');\r\n        }else{\r\n          let batch = pnp.sp.web.createBatch();\r\n            let list = pnp.sp.web.lists.getByTitle(this.properties.listName);\r\n            items.forEach(element => {\r\n              list.items.getById(element.Id).inBatch(batch).delete().then(d => console.log(d));\r\n            });\r\n\r\n            batch.execute().then(d=> {\r\n                var stringOfId='';\r\n                items.forEach(element => {\r\n                    stringOfId+=element.Id +',';\r\n                });\r\n                this.updateStatus(`Item with IDs: ${stringOfId} successfully deleted`);\r\n              }).catch(error => {\r\n                this.updateStatus('Error deleting item '+ error);\r\n            });\r\n        }\r\n    });    \r\n  }\r\n\r\n  private updateStatus(status: string, items: IListItem[] = []): void {\r\n    this.domElement.querySelector('.status').innerHTML = status;\r\n    this.updateItemsHtml(items);\r\n  }\r\n\r\n  private updateItemsHtml(items: IListItem[]): void {\r\n    const itemsHtml: string[] = [];\r\n    for (let i: number = 0; i < items.length; i++) {\r\n      itemsHtml.push(`<li>${items[i].Title} (${items[i].Id})</li>`);\r\n    }\r\n\r\n    this.domElement.querySelector('.items').innerHTML = itemsHtml.join('');\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}