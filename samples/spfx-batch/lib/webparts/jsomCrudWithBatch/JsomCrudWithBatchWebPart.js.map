{"version":3,"sources":["webparts/jsomCrudWithBatch/JsomCrudWithBatchWebPart.ts"],"names":[],"mappings":"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","file":"webparts/jsomCrudWithBatch/JsomCrudWithBatchWebPart.js","sourcesContent":["import { Version } from '@microsoft/sp-core-library';\r\nimport {\r\n  BaseClientSideWebPart,\r\n  IPropertyPaneConfiguration,\r\n  PropertyPaneTextField,\r\n  IWebPartContext\r\n} from '@microsoft/sp-webpart-base';\r\nimport { escape } from '@microsoft/sp-lodash-subset';\r\n\r\nimport styles from './JsomCrudWithBatch.module.scss';\r\nimport * as strings from 'jsomCrudWithBatchStrings';\r\nimport { IListItem } from './IListItem';\r\nimport { IJsomCrudWithBatchWebPartProps } from './IJsomCrudWithBatchWebPartProps';\r\n\r\nrequire('sp-init');\r\nrequire('microsoft-ajax');\r\nrequire('sp-runtime');\r\nrequire('sharepoint');\r\n\r\nexport default class JsomCrudWithBatchWebPart extends BaseClientSideWebPart<IJsomCrudWithBatchWebPartProps> {\r\n\r\n  private webpartTitle: string = \"\";\r\n  \r\n  public render(): void {\r\n    \r\n    this.domElement.innerHTML = `\r\n  <div class=\"${styles.spPnPJsCrud}\">\r\n    <div class=\"${styles.container}\">\r\n      <div class=\"ms-Grid-row ms-bgColor-themeDark ms-fontColor-white ${styles.row}\">\r\n        <div class=\"ms-Grid-col ms-u-lg10 ms-u-xl8 ms-u-xlPush2 ms-u-lgPush1\">\r\n          <span class=\"ms-font-xl ms-fontColor-white\">\r\n            Sample SharePoint CRUD operations using the SP JSOM library\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div class=\"ms-Grid-row ms-bgColor-themeDark ms-fontColor-white ${styles.row}\">\r\n        <div class=\"ms-Grid-col ms-u-lg10 ms-u-xl8 ms-u-xlPush2 ms-u-lgPush1\">\r\n          <button class=\"${styles.button} create-Button\">\r\n            <span class=\"${styles.label}\">Create item</span>\r\n          </button>          \r\n        </div>\r\n      </div>\r\n      <div class=\"ms-Grid-row ms-bgColor-themeDark ms-fontColor-white ${styles.row}\">\r\n        <div class=\"ms-Grid-col ms-u-lg10 ms-u-xl8 ms-u-xlPush2 ms-u-lgPush1\">\r\n          <button class=\"${styles.button} readall-Button\">\r\n            <span class=\"${styles.label}\">Read all items</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"ms-Grid-row ms-bgColor-themeDark ms-fontColor-white ${styles.row}\">\r\n        <div class=\"ms-Grid-col ms-u-lg10 ms-u-xl8 ms-u-xlPush2 ms-u-lgPush1\">\r\n          <button class=\"${styles.button} update-Button\">\r\n            <span class=\"${styles.label}\">Update latest items</span>\r\n          </button>\r\n          <button class=\"${styles.button} delete-Button\">\r\n            <span class=\"${styles.label}\">Delete item</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"ms-Grid-row ms-bgColor-themeDark ms-fontColor-white ${styles.row}\">\r\n        <div class=\"ms-Grid-col ms-u-lg10 ms-u-xl8 ms-u-xlPush2 ms-u-lgPush1\">\r\n          <div class=\"status\"></div>\r\n          <ul class=\"items\"><ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n    `;\r\n\r\n    this.updateStatus(this.listNotConfigured() ? 'Please configure list in Web Part properties' : 'Ready');\r\n    this.setButtonsState();\r\n    this.setButtonsEventHandlers();\r\n  }\r\n\r\n  private setButtonsState(): void {\r\n    const buttons: NodeListOf<Element> = this.domElement.querySelectorAll(`button.${styles.button}`);\r\n    const listNotConfigured: boolean = this.listNotConfigured();\r\n\r\n    for (let i: number = 0; i < buttons.length; i++) {\r\n      const button: Element = buttons.item(i);\r\n      if (listNotConfigured) {\r\n        button.setAttribute('disabled', 'disabled');\r\n      }\r\n      else {\r\n        button.removeAttribute('disabled');\r\n      }\r\n    }\r\n  }\r\n\r\n  private listNotConfigured(): boolean {\r\n    return this.properties.listName === undefined ||\r\n      this.properties.listName === null ||\r\n      this.properties.listName.length === 0;\r\n  }\r\n\r\n  private setButtonsEventHandlers(): void {\r\n    const webPart: JsomCrudWithBatchWebPart = this;\r\n    this.domElement.querySelector('button.create-Button').addEventListener('click', () => { webPart.createItem(); });\r\n    this.domElement.querySelector('button.readall-Button').addEventListener('click', () => { webPart.readItems(); });\r\n    this.domElement.querySelector('button.update-Button').addEventListener('click', () => { webPart.updateItem(); });\r\n    this.domElement.querySelector('button.delete-Button').addEventListener('click', () => { webPart.deleteItem(); });\r\n  }\r\n\r\n  private updateStatus(status: string, items: IListItem[] = []): void {\r\n    this.domElement.querySelector('.status').innerHTML = status;\r\n    this.updateItemsHtml(items);\r\n  }\r\n\r\n  private updateItemsHtml(items: IListItem[]): void {\r\n    const itemsHtml: string[] = [];\r\n    for (let i: number = 0; i < items.length; i++) {\r\n      itemsHtml.push(`<li>${items[i].Title} (${items[i].Id})</li>`);\r\n    }\r\n\r\n    this.domElement.querySelector('.items').innerHTML = itemsHtml.join('');\r\n  }\r\n\r\n  public readItems(): void {\r\n    this.updateStatus('Loading all items...');\r\n    const context: SP.ClientContext = new SP.ClientContext(this.context.pageContext.web.absoluteUrl);\r\n    const list: SP.List = context.get_web().get_lists().getByTitle(this.properties.listName);\r\n\r\n    var camlQuery = SP.CamlQuery.createAllItemsQuery();\r\n    var collTermListItem = list.getItems(camlQuery);\r\n\r\n    var listItems: IListItem[] = [];\r\n\r\n    context.load(list);\r\n    context.load(collTermListItem, 'Include(Title,Id)');\r\n    var beforeCallback = this;\r\n    context.executeQueryAsync(function name(sender, args) {\r\n      var listItemInfo = '';\r\n      var listItemEnumerator = collTermListItem.getEnumerator();\r\n      while (listItemEnumerator.moveNext()) {\r\n        var oListItem = listItemEnumerator.get_current();\r\n        //listItemInfo = oListItem.get_item('Title') + '\\n';\r\n        listItems.push({\r\n          Title: oListItem.get_item('Title'),\r\n          Id: oListItem.get_id()\r\n        });\r\n      }\r\n      console.log(listItems);\r\n      beforeCallback.updateStatus(`Successfully loaded ${listItems.length} items`, listItems);\r\n    },\r\n      function (sender, args) {\r\n        console.log(args.get_message());\r\n        beforeCallback.updateStatus(`Error occured: ` + args.get_message());\r\n      });\r\n  }\r\n\r\n  private createItem(): void {\r\n    this.updateStatus('Creating item...');\r\n\r\n    var itemArray = [];\r\n    const context: SP.ClientContext = new SP.ClientContext(this.context.pageContext.web.absoluteUrl);\r\n    const list: SP.List = context.get_web().get_lists().getByTitle(this.properties.listName);\r\n    var beforeCallback = this;\r\n\r\n    for (var i = 0; i < 5; i++) {\r\n\r\n      var itemCreateInfo = new SP.ListItemCreationInformation();\r\n      var oListItem = list.addItem(itemCreateInfo);\r\n      oListItem.set_item('Title', 'Batch add ' + i);\r\n      oListItem.update();\r\n      itemArray[i] = oListItem;\r\n      context.load(itemArray[i]);\r\n    }\r\n\r\n    context.executeQueryAsync(function () {\r\n      beforeCallback.updateStatus(`Items successfully created via batch`);\r\n    }, function (args) {\r\n      beforeCallback.updateStatus(`Error occured while creating items: ` + args.get_message() + \" \\n \" + args.get_stackTrace());\r\n    });\r\n  }\r\n\r\n  private getLatestItemId(successCallback, errorCallback): void {\r\n\r\n    //todo - associate with a slider/dropdown/textbox to set number of items\r\n    const context: SP.ClientContext = new SP.ClientContext(this.context.pageContext.web.absoluteUrl);\r\n    const list: SP.List = context.get_web().get_lists().getByTitle(this.properties.listName);\r\n\r\n    var camlQuery = SP.CamlQuery.createAllItemsQuery();\r\n    camlQuery.set_viewXml('<View><Query><OrderBy><FieldRef Name=\"ID\" Ascending=\"False\"/></OrderBy></Where></Query><RowLimit>5</RowLimit></View>');\r\n    var collTermListItem = list.getItems(camlQuery);\r\n\r\n    var listItems: IListItem[] = [];\r\n\r\n    context.load(list);\r\n    context.load(collTermListItem, 'Include(Id)');\r\n    var beforeCallback = this;\r\n    context.executeQueryAsync(function name(sender, args) {\r\n      var listItemInfo = '';\r\n      var listItemEnumerator = collTermListItem.getEnumerator();\r\n      while (listItemEnumerator.moveNext()) {\r\n        var oListItem = listItemEnumerator.get_current();\r\n        listItems.push({\r\n          Id: oListItem.get_id()\r\n        });\r\n      }      \r\n      successCallback(listItems);\r\n    },\r\n      function (sender, args) {        \r\n        errorCallback(args.get_message());\r\n      });\r\n\r\n  }\r\n\r\n  private updateItem(): void {\r\n    var webUrl = this.context.pageContext.web.absoluteUrl;\r\n    var listName = this.properties.listName\r\n    this.updateStatus('Updating latest items...');\r\n    var beforeCallback = this;\r\n\r\n    this.getLatestItemId(function (data: IListItem[]) {      \r\n    var itemArray = [];\r\n    const context: SP.ClientContext = new SP.ClientContext(webUrl);\r\n    const list: SP.List = context.get_web().get_lists().getByTitle(listName);    \r\n    \r\n    for(var i = 0; i< data.length; i++){    \r\n        var oListItem = list.getItemById(data[i].Id);  \r\n        oListItem.set_item('Title', 'Updated from batch ' + i);  \r\n        oListItem.update();\r\n        itemArray[i] = oListItem;\r\n        context.load(itemArray[i]);\r\n    }    \r\n    context.executeQueryAsync(function(){\r\n        var stringOfId='';\r\n        data.forEach(element => {\r\n            stringOfId+=element.Id +',';\r\n        });\r\n        beforeCallback.updateStatus(`Item with IDs: ${stringOfId} successfully updated`);\r\n    },function(args){\r\n        beforeCallback.updateStatus(`Error occured while updating items: ` + args.get_message() + \" \\n \" + args.get_stackTrace());\r\n    });\r\n\r\n    }, function (data: any) {\r\n      console.log(data);\r\n    });\r\n  }\r\n\r\n  private deleteItem(): void {\r\n    if (!window.confirm('Are you sure you want to delete the latest item?')) {\r\n      return;\r\n    }\r\n\r\n    var webUrl = this.context.pageContext.web.absoluteUrl;\r\n    var listName = this.properties.listName\r\n    this.updateStatus('Deleting latest items...');\r\n    var beforeCallback = this;\r\n\r\n    this.getLatestItemId(function (data: IListItem[]) {      \r\n    var itemArray = [];\r\n    const context: SP.ClientContext = new SP.ClientContext(webUrl);\r\n    const list: SP.List = context.get_web().get_lists().getByTitle(listName);    \r\n    \r\n    for(var i = 0; i < data.length; i++){    \r\n        var oListItem = list.getItemById(data[i].Id);  \r\n        oListItem.deleteObject();    \r\n    }    \r\n    context.executeQueryAsync(function(){\r\n        var stringOfId='';\r\n        data.forEach(element => {\r\n            stringOfId+=element.Id +',';\r\n        });\r\n        beforeCallback.updateStatus(`Item with IDs: ${stringOfId} successfully deleted`);\r\n    },function(args){\r\n        beforeCallback.updateStatus(`Error occured while deleting items: ` + args.get_message() + \" \\n \" + args.get_stackTrace());\r\n    });\r\n\r\n    }, function (data: any) {\r\n      console.log(data);\r\n    });\r\n  }\r\n\r\n  protected get dataVersion(): Version {\r\n    return Version.parse('1.0');\r\n  }\r\n\r\n  protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {\r\n    return {\r\n      pages: [\r\n        {\r\n          header: {\r\n            description: strings.PropertyPaneDescription\r\n          },\r\n          groups: [\r\n            {\r\n              groupName: strings.DataGroupName,\r\n              groupFields: [\r\n                PropertyPaneTextField('listName', {\r\n                  label: strings.ListNameFieldLabel\r\n                })\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}